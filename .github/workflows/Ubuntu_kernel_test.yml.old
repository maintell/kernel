#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# Description: Build Kernel using GitHub Actions
# Change from P3TERX
#

name: Ubuntu Kernel Test

on:
  workflow_dispatch:
  #schedule:
    #- cron: "36 20 * * 1,4"
   # inputs:
    #  ssh:
     #   description: 'SSH connection to Actions'
      #  required: false
       # default: 'false'

env:
  UPLOAD_DIR: true
  UPLOAD_RELEASE: false
  UPLOAD_WETRANSFER: false
  WEBSSH: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    container: docker.io/qctt/kernelbuild:ubuntu20.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        apt update
        apt-get install libfuse-dev libarchive-dev xfsprogs jq -y
        #apt-get install btrfs-tools -y
        apt install btrfs-progs pip python -y
        pip install yamlish junit_xml
        #mkdir /github
        #mkdir /github/home/
        mkdir /github/home/.ssh/
        sudo chown $USER:$GROUPS /workdir
        sudo chown $USER:$GROUPS /workdir/upload

    - name: Get source code
      id: code
      working-directory: /workdir
      run: |
        df -hT $PWD
        #wget https://github.com/lkl/linux/archive/refs/heads/master.zip
        wget https://github.com/ylx2016/linux-1/archive/master.zip
        wget https://github.com/ylx2016/rinetd/archive/refs/heads/main.zip
        unzip master.zip
        unzip main.zip
        mv linux-1-master linux-master
        echo "::set-output name=status::success"

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: env.WEBSSH == 'true'
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Compile the kernel
      id: compile
      if: steps.code.outputs.status == 'success'
      working-directory: /workdir
      run: |
        kernel_ver=5.3
        cd linux-master
        #wget -O .config https://github.com/ylx2016/kernel/raw/master/config_lkl
        wget -O .config https://github.com/ylx2016/kernel/raw/7eb006aae2f0ad2d9f1e52868e2ac7876635b58f/config_lkl
        #wget -O tools/lkl/.config https://github.com/ylx2016/kernel/raw/7eb006aae2f0ad2d9f1e52868e2ac7876635b58f/config_lkl
        sed -ri '/CONFIG_SYSTEM_TRUSTED_KEYS/s/=.+/=""/g' .config && scripts/config --disable MODULE_SIG && scripts/config --disable DEBUG_INFO
        #cd tools/lkl
        #sed -ri '/CONFIG_SYSTEM_TRUSTED_KEYS/s/=.+/=""/g' .config && scripts/config --disable MODULE_SIG && scripts/config --disable DEBUG_INFO
        #echo "#include <linux/sockios.h>" >> /workdir/linux-master/tools/lkl/lib/hijack/xlate.c
        #cd /workdir/linux-master
        sed -i '1i\#include <linux/sockios.h>' tools/lkl/lib/hijack/xlate.c
        echo -e "$(nproc) thread compile"
        sudo time make -j$(nproc) -C tools/lkl
        
        cd /workdir/rinetd-main
        chmod +x make.sh
        bash make.sh
        
        mv /workdir/linux-master/tools/lkl/liblkl.a /workdir/upload
        mv /workdir/linux-master/.config /workdir/upload
        mv /workdir/rinetd-main/rinetd /workdir/upload
        echo "::set-output name=status::success"
        echo "FILE_DATE=Kernel_Ubuntu_$kernel_ver_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV   

    - name: Check space usage
      if: (!cancelled()) && steps.compile.outputs.status == 'success'
      run: df -hT

    - name: Upload
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_DIR == 'true'
      with:
        name: ${{ env.FILE_DATE }}
        path: /workdir/upload
        
    - name: Upload to WeTransfer
      id: wetransfer
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress /workdir/upload 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"     

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        kernel_ver=$(curl -s https://www.kernel.org/ | grep ' <a href="https://cdn.kernel.org/pub/linux/kernel/' | head -n 1 | awk -F '[>]' '{print $2}' | awk -F '[<]' '{print $1}')
        echo "::set-output name=release_tag::Ubuntu_Kernel_${kernel_ver}_latest_bbr_$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        echo "::set-output name=status::success"

    - name: Upload kernel to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: /workdir/upload/*
        
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 10 
